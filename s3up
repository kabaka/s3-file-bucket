#!/usr/bin/env ruby

require 'aws'
require 'digest/md5'
require 'yaml'
require 'securerandom'

include AWS

conf = YAML::load File.open "#{File.expand_path(File.dirname(__FILE__))}/config.yaml"

s3 = S3.new conf[:AWS]
bucket = s3.buckets[conf[:bucket]]

unless bucket.exists?
  abort "bucket #{conf[:bucket]} does not exist"
end

# XXX: this is not very graceful
bucket.lifecycle_configuration.replace do
  add_rule "#{conf[:prefix]}/",
    :expiration_time => conf[:expiration]
end

ARGV.each do |local|
  if File.directory? local
    puts "** Skipped directory #{local}"
    next
  end

  local_path = Pathname.new local

  begin
    gen = SecureRandom.urlsafe_base64 4

    remote_path = "#{conf[:prefix]}/#{gen}"
    remote = bucket.objects[remote_path]
  end while remote.exists?

  remote.write local_path,
    acl: :public_read,
    reduced_redundancy: conf[:reduced_redundancy]

  puts "http://#{conf[:bucket]}/#{remote_path}"
end

